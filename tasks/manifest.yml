---
# Create subscription allocation in the customer portal
- name: delete or create a subscription allocations with subscriptions and download the manifest
  redhat.satellite.redhat_manifest:
    username: "{{ rhsm_user }}"
    password: "{{ rhsm_password }}"
    name: "{{ item.0.redhat_manifest.name }}"
    uuid: "{{ item.0.uuid|default(omit) }}"
    pool_id: "{{ item.1.id|default(omit) }}"
    quantity: "{{ item.1.quantity|default(omit) }}"
    path: "{{ manifest_download_dir }}/{{ item.0.name }}_{{ item.0.redhat_manifest.name }}.zip"
    state: "{{ item.0.redhat_manifest.state }}"
    pool_state: "{{ item.1.state }}"
    validate_certs: "{{ rhsm_verify_ssl }}"
  with_subelements:
    - "{{ satellite_orgs }}"
    - redhat_manifest.pool
  loop_control:
    label: "{{ item.0.redhat_manifest.name }}"
  when: not item.0.redhat_manifest.use_local_manifest
  register: rhsm_manifest
  tags: [katello,manifest]

- name: copy local manifest to satellite
  copy:
    src: "{{ local_manifest_path }}"
    dest: "{{ manifest_download_dir }}/{{ item.0.name }}_{{ item.0.redhat_manifest.name }}.zip"
    mode: 0644
  register: copy_rhsm_manifest
  with_subelements:
    - "{{ satellite_orgs }}"
    - redhat_manifest.pool
  loop_control:
    label: "{{ item.0.redhat_manifest.name }}"
  when: item.0.redhat_manifest.use_local_manifest
  tags: [katello,manifest]

- name: attach manifest to Satellite org
  redhat.satellite.subscription_manifest:
    username: "{{ item.0.admin_username }}"
    password: "{{ item.0.admin_password }}"
    server_url: "{{ satellite_url }}"
    validate_certs: "{{ satellite_verify_ssl }}"
    organization: "{{ item.0.name }}"
    manifest_path: "{{ manifest_download_dir }}/{{ item.0.name }}_{{ item.0.redhat_manifest.name }}.zip"
    redhat_repository_url: "{{ item.0.redhat_manifest.cdn_url| default(omit) }}"
    state: "{{ item.0.redhat_manifest.state }}"
  with_subelements:
    - "{{ satellite_orgs }}"
    - redhat_manifest.pool
  loop_control:
    label: "{{ item.0.redhat_manifest.name }}"
  tags: [katello,manifest]
  register: attach_manifest
  when: copy_rhsm_manifest.changed or rhsm_manifest.changed

## This task should be cleaned up
- name: refresh manifest
  redhat.satellite.subscription_manifest:
    username: "{{ item.0.admin_username }}"
    password: "{{ item.0.admin_password }}"
    server_url: "{{ satellite_url }}"
    validate_certs: "{{ satellite_verify_ssl }}"
    organization: "{{ item.0.name }}"
    state: "refreshed"
  with_subelements:
    - "{{ satellite_orgs }}"
    - redhat_manifest.pool
  loop_control:
    label: "{{ item.0.redhat_manifest.name }}"
  tags: [katello,manifest]
  when: attach_manifest.changed
