---
- name: get all repositories
  redhat.satellite.resource_info:
    username: "{{ item.admin_username }}"
    password: "{{ item.admin_password }}"
    server_url: "{{ satellite_url }}"
    validate_certs: "{{ satellite_verify_ssl }}"
    resource: repositories
  register: repositories
  tags: [katello,sync]
  loop: "{{ satellite_orgs }}"
  loop_control:
    label: "{{ item.name }}"

- name: sync product repository
  vars:
    product_org: "{{ item.1.name }}"
    product_name: "{{ item.0.product.name }}"
    product_repo: "{{ item.0.name }}"
  redhat.satellite.repository_sync:
    username: "{{ item | json_query('[*].admin_username') | first }}"
    password: "{{ item | json_query('[*].admin_password') | first }}"
    server_url: "{{ satellite_url }}"
    validate_certs: "{{ satellite_verify_ssl }}"
    organization: "{{ product_org }}"
    product: "{{ product_name }}"
    repository:  "{{ product_repo }}"
  loop: "{{ repositories.results.0.resources|product(satellite_orgs)|list }}"
  loop_control:
    label: "{{ item.0.product.name }}"
  when: item.0.url
  async: 999999
  poll: 0
  register: repo_sync_sleeper
  tags: [katello,repo,sync_plans]

- name: Wait until all Syncs have finished
  async_status:
    jid: "{{ repo_sync_sleeper_item.ansible_job_id }}"
  loop: "{{ repo_sync_sleeper.results }}"
  loop_control:
    loop_var: repo_sync_sleeper_item
  when: repo_sync_sleeper_item.ansible_job_id is defined  # Skip items that were skipped in the previous task
  register: async_job_result
  until: async_job_result.finished
  # We want to give ourselves a maximum of 6 hours. The timer resets every
  # time an async job completes, and if you've not completed at least one
  # repo after 6 hours, you have bandwidth issues.
  retries: 2160
  delay: 10
